{"name":"rDVR","tagline":"Cross Platform (Lin/Win/OSx) DVR for R","body":"# rDVR\r\n\r\nThe rDVR package provides an R wrapper to a REST API for a video server. The REST API is written in JAVA and is a modified version of [VideoRecorderService](https://github.com/tuenti/VideoRecorderService). This video server relies on the screen recorder included in the great Monte Media Library developed by Werner Randelshofer (http://http://www.randelshofer.ch/monte/). It has been modified to run as a background process and record for up-to 10 minutes. An extra method /rec/closeserver has been added to the REST API to enable shutting down of the service. It has been tested on Ubuntu 12.04, Windows 8.1 and OSx 10.9 mavericks. \r\n\r\n### USAGE\r\n\r\nUsing `rDVR` is straightforward. The main object is a reference class which controls the video service.\r\nThere are utility functions to start the service and to download a compiled server.\r\n```\r\nrequire(rDVR)\r\nstartVServer() # utility function to start a video server\r\nDVR <- rDVR()\r\nDVR$start()\r\n# Do your thing for upto 10 minutes\r\nDVR$save()\r\nDVR$closeServer()\r\n```\r\n### Getting started\r\nTo install `rDVR` you will need the devtools package. If necessary (install.packages(\"devtools\")) and run:\r\n```\r\ndevtools::install_github(\"rDVR\", \"johndharrison\")\r\n```\r\n\r\n### Record Selenium tests\r\n\r\n`rDVR` can be used to record your Selenium tests ran with [RSelenium](http://johndharrison.github.io/RSelenium/)\r\n\r\n```\r\nrequire(RSelenium)\r\nrequire(rDVR)\r\n\r\n```\r\n### Support or Contact\r\n\r\nHaving trouble with rDVR? We would love to help you at https://github.com/johndharrison/rDVR. File an issue and help us to improve rDVR.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}